# -*- coding: utf-8 -*-
"""OcupaçãoCandidaturas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1reCTj-n-HfAtvrc6RyK0xQ42t6wZFS5r
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
from wordcloud import WordCloud
from collections import Counter

cargo00 = pd.read_csv('cargo00.csv', sep= ';', encoding= 'latin1' )
cargo04 = pd.read_csv('cargo04.csv', sep= ';', encoding= 'latin1' )
cargo08 = pd.read_csv('cargo08.csv', sep= ';', encoding= 'latin1' )
cargo12 = pd.read_csv('cargo12.csv', sep= ';', encoding= 'latin1' )
cargo16 = pd.read_csv('cargo16.csv', sep= ';', encoding= 'latin1' )
cargo20 = pd.read_csv('cargo20.csv', sep= ';', encoding= 'latin1' )
cargo24 = pd.read_csv('cargo24.csv', sep= ';', encoding= 'latin1' )
cargos = pd.read_csv('cargos.csv', sep= ';', encoding= 'latin1' )

cargo00 = cargo00.drop(columns=['Data de carga'])
cargo04 = cargo04.drop(columns=['Data de carga'])
cargo08 = cargo08.drop(columns=['Data de carga'])
cargo12 = cargo12.drop(columns=['Data de carga'])
cargo16 = cargo16.drop(columns=['Data de carga'])
cargo20 = cargo20.drop(columns=['Data de carga'])
cargo24 = cargo24.drop(columns=['Data de carga'])

cargo24 = cargo24[~cargo24['Ocupação'].isin(['Outros', 'Não informada'])]
cargo20 = cargo20[~cargo20['Ocupação'].isin(['Outros', 'Não informada'])]
cargo16 = cargo16[~cargo16['Ocupação'].isin(['Outros', 'Não informada'])]
cargo12 = cargo12[~cargo12['Ocupação'].isin(['Outros', 'Não informada'])]
cargo08 = cargo08[~cargo08['Ocupação'].isin(['Outros', 'Não informada'])]
cargo04 = cargo04[~cargo04['Ocupação'].isin(['OUTROS', 'NÃO INFORMADA'])]
cargo00 = cargo00[~cargo00['Ocupação'].isin(['Outros', 'Não Informada'])]

cargos['Porcentagem'] = cargos['Porcentagem'].str.replace(',','.')
cargos["Porcentagem"] = pd.to_numeric(cargos["Porcentagem"], errors='coerce')
cargos["Porcentagem"] = cargos["Porcentagem"] * 100

cargo24.insert(3, 'Ano', 2024)
cargo04.insert(3, 'Ano', 2004)
cargo16.insert(3, 'Ano', 2016)
cargo00.insert(3, 'Ano', 2000)
cargo08.insert(3, 'Ano', 2008)
cargo12.insert(3, 'Ano', 2012)
cargo20.insert(3, 'Ano', 2020)

cargo24_sorted = cargo24.sort_values('Quantitativo', ascending=False)
top_10_quantitativo24 = cargo24_sorted.head(10)
top_10_quantitativo24

plt.barh(top_10_quantitativo24['Ocupação'], top_10_quantitativo24['Quantitativo'], color='blue')
plt.xlabel('Ocupação')
plt.ylabel('Quantitativo')
plt.title('Principais cargos entre os candiatos das eleições de 2024')

cargo20_sorted = cargo20.sort_values('Quantitativo', ascending=False)
top_10_quantitativo20 = cargo20_sorted.head(10)
top_10_quantitativo20

plt.barh(top_10_quantitativo20['Ocupação'], top_10_quantitativo20['Quantitativo'], color='purple')
plt.xlabel('Ocupação')
plt.ylabel('Quantitativo')
plt.title('Principais cargos entre os candiatos das eleições de 2020')

cargo16_sorted = cargo16.sort_values('Quantitativo', ascending=False)
top_10_quantitativo16 = cargo16_sorted.head(10)
top_10_quantitativo16

plt.barh(top_10_quantitativo16['Ocupação'], top_10_quantitativo16['Quantitativo'], color='pink')
plt.xlabel('Ocupação')
plt.ylabel('Quantitativo')
plt.title('Principais cargos entre os candiatos das eleições de 2016')

cargo12_sorted = cargo12.sort_values('Quantitativo', ascending=False)
top_10_quantitativo12 = cargo12_sorted.head(10)
top_10_quantitativo12

plt.barh(top_10_quantitativo12['Ocupação'], top_10_quantitativo12['Quantitativo'], color='yellow')
plt.xlabel('Ocupação')
plt.ylabel('Quantitativo')
plt.title('Principais cargos entre os candiatos das eleições de 2012')

cargo08_sorted = cargo08.sort_values('Quantitativo', ascending=False)
top_10_quantitativo08 = cargo08_sorted.head(10)
top_10_quantitativo08

plt.barh(top_10_quantitativo08['Ocupação'], top_10_quantitativo08['Quantitativo'], color='orange')
plt.xlabel('Ocupação')
plt.ylabel('Quantitativo')
plt.title('Principais cargos entre os candiatos das eleições de 2008')

cargo04_sorted = cargo04.sort_values('Quantitativo', ascending=False)
top_10_quantitativo04 = cargo04_sorted.head(10)
top_10_quantitativo04

plt.barh(top_10_quantitativo04['Ocupação'], top_10_quantitativo04['Quantitativo'], color='red')
plt.xlabel('Ocupação')
plt.ylabel('Quantitativo')
plt.title('Principais cargos entre os candiatos das eleições de 2004')

cargo00_sorted = cargo00.sort_values('Quantitativo', ascending=False)
top_10_quantitativo00 = cargo00_sorted.head(10)
top_10_quantitativo00

plt.barh(top_10_quantitativo00['Ocupação'], top_10_quantitativo00['Quantitativo'], color='green')
plt.xlabel('Ocupação')
plt.ylabel('Quantitativo')
plt.title('Principais cargos entre os candiatos das eleições de 2000')

lista_cargos = []
for index, row in cargos.iterrows():
  for x in range(int(row['Porcentagem']*100)):
    lista_cargos.append(row['Ocupação'].upper())

for cargo in lista_cargos[:]:
   if cargo == 'OUTROS' or cargo == 'NÃO INFORMADA':
    lista_cargos.remove(cargo)

lista_contagem = Counter(lista_cargos)
wordcloud = WordCloud(background_color='white',width=1920,height=1080).generate_from_frequencies(lista_contagem)
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")
plt.figure(figsize=(20,10))
wordcloud.to_file('wordcloud_file.png')

vereador_cargos = pd.read_csv('vereador_cargos.csv', sep= ';', encoding= 'latin1' )
deputadof_cargos = pd.read_csv('deputadof_cargos.csv', sep= ';', encoding= 'latin1' )
deputadoe_cargos= pd.read_csv('deputadoe_cargos.csv', sep= ';', encoding= 'latin1' )
senador_cargos = pd.read_csv('senador_cargos.csv', sep= ';', encoding= 'latin1' )

vereador_cargos['Porcentagem'] = vereador_cargos['Porcentagem'].str.replace(',','.')
vereador_cargos["Porcentagem"] = pd.to_numeric(vereador_cargos["Porcentagem"], errors='coerce')
vereador_cargos["Porcentagem"] = vereador_cargos["Porcentagem"] * 100
deputadof_cargos['Porcentagem'] = deputadof_cargos['Porcentagem'].str.replace(',','.')
deputadof_cargos["Porcentagem"] = pd.to_numeric(deputadof_cargos["Porcentagem"], errors='coerce')
deputadof_cargos["Porcentagem"] = deputadof_cargos["Porcentagem"] * 100
deputadoe_cargos['Porcentagem'] = deputadoe_cargos['Porcentagem'].str.replace(',','.')
deputadoe_cargos["Porcentagem"] = pd.to_numeric(deputadoe_cargos["Porcentagem"], errors='coerce')
deputadoe_cargos["Porcentagem"] = deputadoe_cargos["Porcentagem"] * 100
senador_cargos['Porcentagem'] = senador_cargos['Porcentagem'].str.replace(',','.')
senador_cargos["Porcentagem"] = pd.to_numeric(senador_cargos["Porcentagem"], errors='coerce')
senador_cargos["Porcentagem"] = senador_cargos["Porcentagem"] * 100

lista_vereador = []
for index, row in vereador_cargos.iterrows():
  for x in range(int(row['Porcentagem']*100)):
    lista_vereador.append(row['Ocupação'].upper())

vereador_contagem = Counter(lista_vereador)
wordcloud = WordCloud(background_color='white',width=1920,height=1080).generate_from_frequencies(vereador_contagem)
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")
plt.figure(figsize=(20,10))
wordcloud.to_file('wordcloud_file.png')

lista_deputadof = []
for index, row in deputadof_cargos.iterrows():
  for x in range(int(row['Porcentagem']*100)):
    lista_deputadof.append(row['Ocupação'].upper())

deputadof_contagem = Counter(lista_deputadof)
wordcloud = WordCloud(background_color='white',width=1920,height=1080).generate_from_frequencies(deputadof_contagem)
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")
plt.figure(figsize=(20,10))
wordcloud.to_file('wordcloud_file.png')

lista_deputadoe = []
for index, row in deputadoe_cargos.iterrows():
  for x in range(int(row['Porcentagem']*100)):
    lista_deputadoe.append(row['Ocupação'].upper())

deputadoe_contagem = Counter(lista_deputadoe)
wordcloud = WordCloud(background_color='white',width=1920,height=1080).generate_from_frequencies(deputadoe_contagem)
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")
plt.figure(figsize=(20,10))
wordcloud.to_file('wordcloud_file.png')

lista_senador = []
for index, row in senador_cargos.iterrows():
  for x in range(int(row['Porcentagem']*100)):
    lista_senador.append(row['Ocupação'].upper())

senador_contagem = Counter(lista_senador)
wordcloud = WordCloud(background_color='white',width=1920,height=1080).generate_from_frequencies(senador_contagem)
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")
plt.figure(figsize=(20,10))
wordcloud.to_file('wordcloud_file.png')
# -*- coding: utf-8 -*-
"""GenerosCandidaturas

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WCTxrMMtTmlMiOR3h51hNhKwbjdtP2n5
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

dados1 = pd.read_csv('dados24g.csv', sep= ';', encoding= 'latin1' )
dados2 = pd.read_csv('dados04g.csv', sep= ';', encoding= 'latin1' )
dados3 = pd.read_csv('dados16g.csv', sep= ';', encoding= 'latin1' )
dados4 = pd.read_csv('dados00g.csv', sep= ';', encoding= 'latin1' )
dados5 = pd.read_csv('dados08g.csv', sep= ';', encoding= 'latin1' )
dados6 = pd.read_csv('dados12g.csv', sep= ';', encoding= 'latin1' )
dados7 = pd.read_csv('dados20g.csv', sep= ';', encoding= 'latin1' )

dados1 = dados1.drop(columns=['Data de carga'])
dados2 = dados2.drop(columns=['Data de carga'])
dados3 = dados3.drop(columns=['Data de carga'])
dados4 = dados4.drop(columns=['Data de carga'])
dados5 = dados5.drop(columns=['Data de carga'])
dados6 = dados6.drop(columns=['Data de carga'])
dados7 = dados7.drop(columns=['Data de carga'])

dados1.insert(3, 'Ano', 2024)
dados2.insert(3, 'Ano', 2004)
dados3.insert(3, 'Ano', 2016)
dados4.insert(3, 'Ano', 2000)
dados5.insert(3, 'Ano', 2008)
dados6.insert(3, 'Ano', 2012)
dados7.insert(3, 'Ano', 2020)

dados1

dados=pd.concat([dados1, dados2, dados3, dados4, dados5, dados6, dados7], ignore_index=True)

dados['Gênero'] = dados['Gênero'].replace('Não divulgável', 'Não informado')

dados.sort_values('Ano')

dados['Porcentagem'] = dados['Porcentagem'].str.replace(',','.')
dados["Porcentagem"] = dados["Porcentagem"].astype(float)
dados["Porcentagem"] = dados["Porcentagem"] * 100

dados

"""Desempenho dos gêneros entre o período de 2000 a 2024 nas eleições para prefeitos, vices e vereadores."""

sns.lineplot(data=dados,x='Ano',y='Porcentagem',hue='Gênero').set(title='Gênero da candidatura 2000 a 2024', xlabel='Ano', ylabel='Porcentagem')
plt.xticks(range(2000, 2025, 4))

sns.lineplot(data=dados,x='Ano',y='Quantitativo',hue='Gênero').set(title='Gênero da candidatura 2000 a 2024', xlabel='Ano', ylabel='Porcentagem')
plt.xticks(range(2000, 2025, 4))

dados4

"""Diferença entre a quantidade de cada gênero nas eleições para prefeitos, vices e vereadores em 2000 e 2012."""

cores=['#FFB6C1', '#FFFF00', '#ADD8E6']
dados4.plot(kind='pie', y='Quantitativo', autopct='%1.1f%%', startangle=0, colors=cores, labels=None)
plt.legend(labels=['Feminino', 'Não Informado', 'Masculino'],
           title="Gênero", loc="center left", bbox_to_anchor=(1, 0.5))
plt.title('Gênero candidaturas no Brasil em 2000')
plt.ylabel('')
plt.show()

dados6

cores=['#FFB6C1', '#ADD8E6', '#FFFF00']
dados6.plot(kind='pie', y='Quantitativo', autopct='%1.1f%%', startangle=0, colors=cores, labels=None)
plt.legend(labels=['Feminino', 'Masculino', 'Não Informado'],
           title="Gênero", loc="center left", bbox_to_anchor=(1, 0.5))
plt.title('Gênero candidaturas no Brasil em 2012')
plt.ylabel('')
plt.show()

turno00_1 = pd.read_csv('1turno00gpref.csv', sep= ';', encoding= 'latin1' )
turno12_1 = pd.read_csv('1turno12gpref.csv', sep= ';', encoding= 'latin1' )
turno24_1 = pd.read_csv('1turno24gpref.csv', sep= ';', encoding= 'latin1' )
turno00_2 = pd.read_csv('2turno00gpref.csv', sep= ';', encoding= 'latin1' )
turno12_2 = pd.read_csv('2turno12gpref.csv', sep= ';', encoding= 'latin1' )
turno24_2 = pd.read_csv('2turno24gpref.csv', sep= ';', encoding= 'latin1' )

turno00_1 = turno00_1.drop(columns=['Data de carga'])
turno12_1 = turno12_1.drop(columns=['Data de carga'])
turno24_1 = turno24_1.drop(columns=['Data de carga'])
turno00_2 = turno00_2.drop(columns=['Data de carga'])
turno12_2 = turno12_2.drop(columns=['Data de carga'])
turno24_2 = turno24_2.drop(columns=['Data de carga'])

turno00_1.insert(3, 'Ano', 2000)
turno12_1.insert(3, 'Ano', 2012)
turno24_1.insert(3, 'Ano', 2024)
turno00_2.insert(3, 'Ano', 2000)
turno12_2.insert(3, 'Ano', 2012)
turno24_2.insert(3, 'Ano', 2024)
turno00_1.insert(4, 'Turno', "1 turno")
turno12_1.insert(4, 'Turno', "1 turno")
turno24_1.insert(4, 'Turno', "1 turno")
turno00_2.insert(4, 'Turno', "2 turno")
turno12_2.insert(4, 'Turno', "2 turno")
turno24_2.insert(4, 'Turno', "2 turno")

turnos=pd.concat([turno00_1, turno12_1, turno24_1, turno00_2, turno12_2, turno24_2], ignore_index=True)
turnos['Porcentagem'] = turnos['Porcentagem'].str.replace(',','.')
turnos["Porcentagem"] = turnos["Porcentagem"].astype(float)
turnos["Porcentagem"] = turnos["Porcentagem"] * 100
turnos['Gênero'] = turnos['Gênero'].replace('Não divulgável', 'Não informado')
turnos.rename(columns={'Gênero': 'Genero'}, inplace = True)

turnos

"""Análise do gênero feminino e desempenho nas eleições para prefeitos entre 2024, 2012 e 2000."""

genero = "Feminino"
turnos_genero = turnos[turnos['Genero'] == genero]

turnos_pivot = turnos_genero.pivot(index='Ano', columns='Turno', values='Porcentagem')

ax = turnos_pivot.plot(kind='bar', figsize=(10, 6), width=0.8, color=['#E1BEE7', '#B3E5FC'])

plt.title(f'Porcentagem por Turno e Ano ({genero})', fontsize=16)
plt.xlabel('Ano', fontsize=12)
plt.ylabel('Porcentagem', fontsize=12)
plt.xticks(rotation=0)
plt.legend(title='Turno')
plt.grid(axis='y', linestyle='--', alpha=0.7)

plt.tight_layout()
plt.show()

"""Análise do gênero masculino e desempenho nas eleições para prefeitos entre 2024, 2012 e 2000."""

genero = "Masculino"
turnos_genero = turnos[turnos['Genero'] == genero]

turnos_pivot = turnos_genero.pivot(index='Ano', columns='Turno', values='Porcentagem')

ax = turnos_pivot.plot(kind='bar', figsize=(10, 6), width=0.8, color=['#E1BEE7', '#B3E5FC'])

plt.title(f'Porcentagem por Turno e Ano ({genero})', fontsize=16)
plt.xlabel('Ano', fontsize=12)
plt.ylabel('Porcentagem', fontsize=12)
plt.xticks(rotation=0)
plt.legend(title='Turno')
plt.grid(axis='y', linestyle='--', alpha=0.7)

plt.tight_layout()
plt.show()

"""Análise geral dos gêneros e desempenho nas eleições para prefeitos entre 2024, 2012 e 2000."""

# Reorganizar os dados
turnos_pivot = turnos.pivot_table(index=['Ano', 'Genero'], columns='Turno', values='Porcentagem', aggfunc='sum').fillna(0)

# Criar o gráfico
fig, ax = plt.subplots(figsize=(12, 6))

# Configurações para barras agrupadas
x = range(len(turnos_pivot))  # Posições no eixo x
bar_width = 0.2  # Largura de cada barra
offset = -bar_width  # Deslocamento inicial

cores_turnos = {
    '1 turno': '#FFB3BA',
    '2 turno': '#B3E5FC'}

# Plotar barras para cada turno
for i, turno in enumerate(turnos_pivot.columns):
    ax.bar(
        [pos + offset for pos in x],
        turnos_pivot[turno],
        width=bar_width,
        label=f"{turno}",
        color=cores_turnos.get(turno, '#CCCCCC'),
        alpha=0.8
    )
    offset += bar_width

# Configurar rótulos e título
anos_generos = [f"{ano} ({genero})" for ano, genero in turnos_pivot.index]
ax.set_xticks(range(len(turnos_pivot)))
ax.set_xticklabels(anos_generos, rotation=45, ha="right", fontsize=10)
ax.set_title("Porcentagem por Gênero, Turno e Ano", fontsize=14)
ax.set_ylabel("Porcentagem", fontsize=12)
ax.legend(title="Turno")
ax.grid(axis='y', linestyle='--', alpha=0.7)

# Ajustar layout e exibir o gráfico
plt.tight_layout()
plt.show()

"""Progressão de "Não informado" ao longo dos anos, demostrando a pouca, quase insignificante, quantidade"""

sns.lineplot(data=dados[dados['Gênero'] == 'Não informado'], x='Ano', y='Porcentagem', label='Não Informado').set(title='Progressão de "Não Informado" ao longo dos anos', xlabel='Ano', ylabel='Porcentagem')
plt.xticks(range(2000, 2025, 4))

turnos=turnos.drop(2)
turnos=turnos.drop(5)
turnos=turnos.drop(8)
turnos

"""Análise geral dos gêneros e desempenho nas eleições para prefeitos entre 2024, 2012 e 2000 com gráfico de linhas."""

sns.lineplot(data=turnos, x='Ano', y='Porcentagem', hue='Genero', style='Turno', markers=True).set(title='Desempenho de Gêneros por Turno (2000, 2012 e 2024)', xlabel='Ano', ylabel='Porcentagem')
plt.xticks(range(2000, 2025, 4))

sns.lineplot(data=turnos, x='Ano', y='Quantitativo', hue='Genero', style='Turno', markers=True).set(title='Desempenho de Gêneros por Turno (2000, 2012 e 2024)', xlabel='Ano', ylabel='Quantitativo')
plt.xticks(range(2000, 2025, 4))

"""Análise geral dos gêneros e desempenho nas eleições para vereadores entre 2024, 2012 e 2000"""

vereador00 = pd.read_csv('vereadorg00.csv', sep= ';', encoding= 'latin1' )
vereador12 = pd.read_csv('vereadorg12.csv', sep= ';', encoding= 'latin1' )
vereador24 = pd.read_csv('vereadorg24.csv', sep= ';', encoding= 'latin1' )
vereador00 = vereador00.drop(columns=['Data de carga'])
vereador12 = vereador12.drop(columns=['Data de carga'])
vereador24 = vereador24.drop(columns=['Data de carga'])
vereador24.insert(3, 'Ano', 2024)
vereador12.insert(3, 'Ano', 2012)
vereador00.insert(3, 'Ano', 2000)

vereador = pd.concat([vereador00, vereador12, vereador24])
vereador['Porcentagem'] = vereador['Porcentagem'].str.replace(',','.')
vereador["Porcentagem"] = vereador["Porcentagem"].astype(float)
vereador["Porcentagem"] = vereador["Porcentagem"] * 100
vereador['Gênero'] = vereador['Gênero'].replace('Não divulgável', 'Não informado')
vereador.rename(columns={'Gênero': 'Genero'}, inplace = True)

vereador_pivot = vereador.pivot(index='Ano', columns='Genero', values='Quantitativo').fillna(0)

fig, ax = plt.subplots(figsize=(10, 6))

x = range(len(vereador_pivot))
bar_width = 0.4
offset = -bar_width / 2

cores = ['#FFB3BA', '#B3E5FC', '#FFE0B2']

for i, Ano in enumerate(vereador_pivot.columns):
    ax.bar(
        [pos + offset + i * bar_width for pos in x],
        vereador_pivot[Ano],
        width=bar_width,
        label=f"{Ano}",
        color=cores[i]
    )

ax.set_xticks(x)
ax.set_xticklabels(vereador_pivot.index, rotation=45, ha="right", fontsize=10)
ax.set_title("Distribuição por Gênero nas eleições para vereadores de 2000, 2012 e 2024")
ax.set_xlabel("Ano")
ax.set_ylabel("Quantitativo")
ax.legend(title="Gênero")
ax.grid(axis='y', linestyle='--', alpha=0.7)

plt.tight_layout()
plt.show()

"""Análise geral dos gêneros e desempenho nas eleições para governadores entre 2022, 2014 e 2002."""

governador1_02 = pd.read_csv('1turno02ggov.csv', sep= ';', encoding= 'latin1' )
governador2_02 = pd.read_csv('2turno02ggov.csv', sep= ';', encoding= 'latin1' )
governador1_14 = pd.read_csv('1turno14ggov.csv', sep= ';', encoding= 'latin1' )
governador2_14 = pd.read_csv('2turno14ggov.csv', sep= ';', encoding= 'latin1' )
governador1_22 = pd.read_csv('1turno22ggov.csv', sep= ';', encoding= 'latin1' )
governador2_22 = pd.read_csv('2turno22ggov.csv', sep= ';', encoding= 'latin1' )
governador1_02 = governador1_02.drop(columns=['Data de carga'])
governador2_02 = governador2_02.drop(columns=['Data de carga'])
governador1_14 = governador1_14.drop(columns=['Data de carga'])
governador2_14 = governador2_14.drop(columns=['Data de carga'])
governador1_22 = governador1_22.drop(columns=['Data de carga'])
governador2_22 = governador2_22.drop(columns=['Data de carga'])
governador1_02.insert(3, 'Ano', 2002)
governador2_02.insert(3, 'Ano', 2002)
governador1_14.insert(3, 'Ano', 2014)
governador2_14.insert(3, 'Ano', 2014)
governador1_22.insert(3, 'Ano', 2022)
governador2_22.insert(3, 'Ano', 2022)
governador1_02.insert(4, 'Turno', '1 turno')
governador2_02.insert(4, 'Turno', '2 turno')
governador1_14.insert(4, 'Turno', '1 turno')
governador2_14.insert(4, 'Turno', '2 turno')
governador1_22.insert(4, 'Turno', '1 turno')
governador2_22.insert(4, 'Turno', '2 turno')

governador = pd.concat([governador1_02, governador2_02, governador1_14, governador2_14, governador1_22, governador2_22])
governador['Porcentagem'] = governador['Porcentagem'].str.replace(',','.')
governador["Porcentagem"] = governador["Porcentagem"].astype(float)
governador["Porcentagem"] = governador["Porcentagem"] * 100
governador.rename(columns={'Gênero': 'Genero'}, inplace = True)
governador['Genero'] = governador['Genero'].replace('Não divulgável', 'Não informado')
governador = governador[governador['Genero'] != 'Não informado']
governador

governador_pivot = governador.pivot_table(index=['Ano', 'Genero'], columns='Turno', values='Porcentagem', aggfunc='sum').fillna(0)

fig, ax = plt.subplots(figsize=(12, 6))

x = range(len(governador_pivot))
bar_width = 0.2
offset = -bar_width

cores_turnos = {
    '1 turno': '#E1BEE7',
    '2 turno': '#B3E5FC'}

for i, turno in enumerate(governador_pivot.columns):
    ax.bar(
        [pos + offset for pos in x],
        governador_pivot[turno],
        width=bar_width,
        label=f"{turno}",
        color=cores_turnos.get(turno, '#CCCCCC'),
        alpha=0.8
    )
    offset += bar_width

anos_generos = [f"{ano} ({genero})" for ano, genero in governador_pivot.index]
ax.set_xticks(range(len(governador_pivot)))
ax.set_xticklabels(anos_generos, rotation=45, ha="right", fontsize=10)
ax.set_title("Porcentagem de candidatos a governadores de acordo com gêneros em 2002, 2014 e 2024", fontsize=14)
ax.set_ylabel("Porcentagem", fontsize=12)
ax.legend(title="Turno")
ax.grid(axis='y', linestyle='--', alpha=0.7)

plt.tight_layout()
plt.show()

"""Análise geral dos gêneros e desempenho nas eleições para senadores entre 2022, 2014 e 2002"""

senador02 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [44, 301],
    'Porcentagem' : [12.61, 86.25],
    'Ano' : [2002, 2002],
}
dfsenador02 = pd.DataFrame(senador02)

senador14 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [35, 150],
    'Porcentagem' : [18.92, 81.08],
    'Ano' : [2014, 2014],
}
dfsenador14 = pd.DataFrame(senador14)

senador22 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [58, 184],
    'Porcentagem' : [23.87, 75.72],
    'Ano' : [2022, 2022],
}
dfsenador22 = pd.DataFrame(senador22)

senador = pd.concat([dfsenador02, dfsenador14, dfsenador22])
senador

senador_pivot = senador.pivot(index='Ano', columns='Genero', values='Quantitativo').fillna(0)

fig, ax = plt.subplots(figsize=(10, 6))

x = range(len(senador_pivot))
bar_width = 0.4
offset = -bar_width / 2

cores = ['#FFB3BA', '#B3E5FC']

for i, Ano in enumerate(senador_pivot.columns):
    ax.bar(
        [pos + offset + i * bar_width for pos in x],
        senador_pivot[Ano],
        width=bar_width,
        label=f"{Ano}",
        color=cores[i]
    )

ax.set_xticks(x)
ax.set_xticklabels(senador_pivot.index, rotation=45, ha="right", fontsize=10)
ax.set_title("Distribuição por Gênero nas eleições para senadores de 2002, 2014 e 2022")
ax.set_xlabel("Ano")
ax.set_ylabel("Quantitativo")
ax.legend(title="Gênero")
ax.grid(axis='y', linestyle='--', alpha=0.7)

plt.tight_layout()
plt.show()

"""Análise geral dos gêneros e desempenho nas eleições para deputados federais entre 2022, 2014 e 2002"""

depf02 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [579, 4284],
    'Porcentagem' : [11.81, 87.39],
    'Ano' : [2002, 2002],
}
dfdepf02 = pd.DataFrame(depf02)

depf14 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [2270, 4866],
    'Porcentagem' : [31.81, 68.19],
    'Ano' : [2014, 2014],
}
dfdepf14 = pd.DataFrame(depf14)

depf22 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [3717, 6905],
    'Porcentagem' : [34.97, 64.96],
    'Ano' : [2022, 2022],
}
dfdepf22 = pd.DataFrame(depf22)

depf = pd.concat([dfdepf02, dfdepf14, dfdepf22])
depf

depf_pivot = depf.pivot(index='Ano', columns='Genero', values='Quantitativo').fillna(0)

fig, ax = plt.subplots(figsize=(10, 6))

x = range(len(depf_pivot))
bar_width = 0.4
offset = -bar_width / 2

cores = ['#FFB3BA', '#E1BEE7']

for i, Ano in enumerate(depf_pivot.columns):
    ax.bar(
        [pos + offset + i * bar_width for pos in x],
        depf_pivot[Ano],
        width=bar_width,
        label=f"{Ano}",
        color=cores[i]
    )

ax.set_xticks(x)
ax.set_xticklabels(depf_pivot.index, rotation=45, ha="right", fontsize=10)
ax.set_title("Distribuição por Gênero nas eleições para deputados federais de 2002, 2014 e 2022")
ax.set_xlabel("Ano")
ax.set_ylabel("Quantitativo")
ax.legend(title="Gênero")
ax.grid(axis='y', linestyle='--', alpha=0.7)

plt.tight_layout()
plt.show()

"""Análise geral dos gêneros e desempenho nas eleições para deputados estaduais entre 2022, 2014 e 2002"""

depe02 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [1863, 10751],
    'Porcentagem' : [14.63, 84.41],
    'Ano' : [2002, 2002],
}
dfdepe02 = pd.DataFrame(depe02)

depe14 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [5344, 11660],
    'Porcentagem' : [31.43, 68.57],
    'Ano' : [2014, 2014],
}
dfdepe14 = pd.DataFrame(depe14)

depe22 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [5603, 11122],
    'Porcentagem' : [33.48, 66.45],
    'Ano' : [2022, 2022],
}
dfdepe22 = pd.DataFrame(depe22)

depe = pd.concat([dfdepe02, dfdepe14, dfdepe22])
depe

depe_pivot = depe.pivot(index='Ano', columns='Genero', values='Quantitativo').fillna(0)

fig, ax = plt.subplots(figsize=(10, 6))

x = range(len(depe_pivot))
bar_width = 0.4
offset = -bar_width / 2

cores = ['#E1BEE7', '#FFE0B2']

for i, Ano in enumerate(depe_pivot.columns):
    ax.bar(
        [pos + offset + i * bar_width for pos in x],
        depe_pivot[Ano],
        width=bar_width,
        label=f"{Ano}",
        color=cores[i]
    )

ax.set_xticks(x)
ax.set_xticklabels(depe_pivot.index, rotation=45, ha="right", fontsize=10)
ax.set_title("Distribuição por Gênero nas eleições para deputados federais de 2002, 2014 e 2022")
ax.set_xlabel("Ano")
ax.set_ylabel("Quantitativo")
ax.legend(title="Gênero")
ax.grid(axis='y', linestyle='--', alpha=0.7)

plt.tight_layout()
plt.show()

"""Análise geral dos gêneros e desempenho nas eleições para presidentes entre 2022, 2014 e 2002"""

presidente1_02 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [1, 7],
    'Porcentagem' : [12.50, 87.50],
    'Ano' : [2002, 2002],
    'Turno' : ['1 turno', '1 turno']
}
dfpresidente1_02 = pd.DataFrame(presidente1_02)

presidente2_02 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [0, 2],
    'Porcentagem' : [0, 100],
    'Ano' : [2002, 2002],
    'Turno' : ['2 turno', '2 turno']
}
dfpresidente2_02 = pd.DataFrame(presidente2_02)

presidente1_14 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [3, 9],
    'Porcentagem' : [25, 75],
    'Ano' : [2014, 2014],
    'Turno' : ['1 turno', '1 turno']
}
dfpresidente1_14 = pd.DataFrame(presidente1_14)

presidente2_14 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [1, 1],
    'Porcentagem' : [50, 50],
    'Ano' : [2014, 2014],
    'Turno' : ['2 turno', '2 turno']
}
dfpresidente2_14 = pd.DataFrame(presidente2_14)

presidente1_22 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [4, 9],
    'Porcentagem' : [30.77, 69.23],
    'Ano' : [2022, 2022],
    'Turno' : ['1 turno', '1 turno']
}
dfpresidente1_22 = pd.DataFrame(presidente1_22)

presidente2_22 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [0, 2],
    'Porcentagem' : [0, 100],
    'Ano' : [2022, 2022],
    'Turno' : ['2 turno', '2 turno']
}
dfpresidente2_22 = pd.DataFrame(presidente2_22)

presidente = pd.concat([dfpresidente1_02, dfpresidente2_02, dfpresidente1_14, dfpresidente2_14, dfpresidente1_22, dfpresidente2_22])
presidente

presidente_pivot = presidente.pivot_table(index=['Ano', 'Genero'], columns='Turno', values='Quantitativo', aggfunc='sum').fillna(0)

fig, ax = plt.subplots(figsize=(12, 6))

x = range(len(presidente_pivot))
bar_width = 0.2
offset = -bar_width

cores_turnos = {
    '1 turno': '#FFE0B2',
    '2 turno': '#B3E5FC'}

for i, turno in enumerate(presidente_pivot.columns):
    ax.bar(
        [pos + offset for pos in x],
        presidente_pivot[turno],
        width=bar_width,
        label=f"{turno}",
        color=cores_turnos.get(turno, '#CCCCCC'),
        alpha=0.8
    )
    offset += bar_width

anos_generos = [f"{ano} ({genero})" for ano, genero in presidente_pivot.index]
ax.set_xticks(range(len(presidente_pivot)))
ax.set_xticklabels(anos_generos, rotation=45, ha="right", fontsize=10)
ax.set_title("Quantidade de candidatos a presidente de acordo com gêneros em 2002, 2014 e 2024", fontsize=14)
ax.set_ylabel("Quantitativo", fontsize=12)
ax.legend(title="Turno")
ax.grid(axis='y', linestyle='--', alpha=0.7)

plt.tight_layout()
plt.show()

"""Análise geral dos gêneros e desempenho nas eleições para vice presidentes entre 2022, 2014 e 2002"""

vicepresidente1_02 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [2, 4],
    'Porcentagem' : [33.33, 66.67],
    'Ano' : [2002, 2002],
    'Turno' : ['1 turno', '1 turno']
}
dfvicepresidente1_02 = pd.DataFrame(vicepresidente1_02)

vicepresidente2_02 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [1, 1],
    'Porcentagem' : [50, 50],
    'Ano' : [2002, 2002],
    'Turno' : ['2 turno', '2 turno']
}
dfvicepresidente2_02 = pd.DataFrame(vicepresidente2_02)

vicepresidente1_14 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [4, 8],
    'Porcentagem' : [33.33, 66.67],
    'Ano' : [2014, 2014],
    'Turno' : ['1 turno', '1 turno']
}
dfvicepresidente1_14 = pd.DataFrame(vicepresidente1_14)

vicepresidente2_14 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [0, 2],
    'Porcentagem' : [0, 100],
    'Ano' : [2014, 2014],
    'Turno' : ['2 turno', '2 turno']
}
dfvicepresidente2_14 = pd.DataFrame(vicepresidente2_14)

vicepresidente1_22 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [5, 8],
    'Porcentagem' : [38.46, 61.54],
    'Ano' : [2022, 2022],
    'Turno' : ['1 turno', '1 turno']
}
dfvicepresidente1_22 = pd.DataFrame(vicepresidente1_22)

vicepresidente2_22 = {
    'Genero' : ['Feminino', 'Masculino'],
    'Quantitativo' : [0, 2],
    'Porcentagem' : [0, 100],
    'Ano' : [2022, 2022],
    'Turno' : ['2 turno', '2 turno']
}
dfvicepresidente2_22 = pd.DataFrame(vicepresidente2_22)

vicepresidente = pd.concat([dfvicepresidente1_02, dfvicepresidente2_02, dfvicepresidente1_14, dfvicepresidente2_14, dfvicepresidente1_22, dfvicepresidente2_22])
vicepresidente

vicepresidente_pivot = vicepresidente.pivot_table(index=['Ano', 'Genero'], columns='Turno', values='Quantitativo', aggfunc='sum').fillna(0)

fig, ax = plt.subplots(figsize=(12, 6))

x = range(len(vicepresidente_pivot))
bar_width = 0.2
offset = -bar_width

cores_turnos = {
    '1 turno': '#E1BEE7',
    '2 turno': '#FFF9C4'}

for i, turno in enumerate(vicepresidente_pivot.columns):
    ax.bar(
        [pos + offset for pos in x],
        vicepresidente_pivot[turno],
        width=bar_width,
        label=f"{turno}",
        color=cores_turnos.get(turno, '#CCCCCC'),
        alpha=0.8
    )
    offset += bar_width

anos_generos = [f"{ano} ({genero})" for ano, genero in vicepresidente_pivot.index]
ax.set_xticks(range(len(vicepresidente_pivot)))
ax.set_xticklabels(anos_generos, rotation=45, ha="right", fontsize=10)
ax.set_title("Quantidade de candidatos a vice presidente de acordo com gêneros em 2002, 2014 e 2024", fontsize=14)
ax.set_ylabel("Quantitativo", fontsize=12)
ax.legend(title="Turno")
ax.grid(axis='y', linestyle='--', alpha=0.7)

plt.tight_layout()
plt.show()
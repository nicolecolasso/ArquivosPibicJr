# -*- coding: utf-8 -*-
"""ipywidgets.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P5tdrV__nNL1OMaZpv8sgyJDrnR_SLWm
"""

import pandas as pd
import ipywidgets as widgets
from ipywidgets import interactive
from IPython.display import display, clear_output

candidatos = pd.read_csv("candidatura_resumo_sem_duplicados.csv", sep= ',', encoding= 'utf-8', low_memory=False)
candidatos['ANO'] = candidatos['ANO'].astype(str)

busca_nome = widgets.Text(value='', placeholder='Digite o nome ou nome de urna do candidato', description='Nome:', disabled=False)
slider_ano = widgets.IntSlider(value=1994, min=1994, max=2024, step=2, description="Ano:")
dropdown_estados = widgets.Dropdown(options=["AC", "AP", "AM", "PA", "RO", "RR", "TO", "AL", "BA", "CE", "MA", "PB", "PE", "PI", "RN", "SE", "DF", "GO", "MT", "MS", "ES", "MG", "RJ", "SP", "PR", "RS", "SC"], description="Estado:")
busca_cidade = widgets.Text(value='', placeholder='Digite a cidade do candidato', description='Cidade:', disabled=False)

output = widgets.Output()

def busca_func(change): #A função é chamada sempre que o valor mudar, change é um dicionário com informações sobre o que mudou no widget (como o novo valor digitado)
    with output:
        clear_output()
        termo = busca_nome.value
        ano = str(slider_ano.value)
        estado = dropdown_estados.value
        cidade = busca_cidade.value
        if termo: #Verifica se algum texto foi digitado
            resultado = candidatos[((candidatos['NM_CANDIDATO'].str.contains(termo, case=False, na=False)) | (candidatos['NM_URNA_CANDIDATO'].str.contains(termo, case=False, na=False))) & (candidatos['ANO'].str.contains(ano, case=False, na=False)) & (candidatos['ESTADO'].str.contains(estado, case=False, na=False)) & (candidatos['CIDADE'].str.contains(cidade, case=False, na=False))]
            if not resultado.empty:
                display(resultado) #Se o resultado não está vazio, ele é exibido usando display()
            else:
                print(f"Nenhum candidato encontrado.")

busca_nome.observe(busca_func, names='value') #Faz com que busca_func seja chamada automaticamente toda vez que mudar o que foi digitado
slider_ano.observe(busca_func, names='value')
dropdown_estados.observe(busca_func, names='value')
busca_cidade.observe(busca_func, names='value')

display(busca_nome, slider_ano, dropdown_estados, busca_cidade)
display(output)

dados24g = pd.read_csv('dados24g.csv', sep= ';', encoding= 'latin1' )
dados22g = pd.read_csv('dados22g.csv', sep= ';', encoding= 'latin1' )
dados20g = pd.read_csv('dados20g.csv', sep= ';', encoding= 'latin1' )
dados18g = pd.read_csv('dados18g.csv', sep= ';', encoding= 'latin1' )
dados16g = pd.read_csv('dados16g.csv', sep= ';', encoding= 'latin1' )
dados14g = pd.read_csv('dados14g.csv', sep= ';', encoding= 'latin1' )
dados12g = pd.read_csv('dados12g.csv', sep= ';', encoding= 'latin1' )
dados10g = pd.read_csv('dados10g.csv', sep= ';', encoding= 'latin1' )
dados08g = pd.read_csv('dados08g.csv', sep= ';', encoding= 'latin1' )
dados06g = pd.read_csv('dados06g.csv', sep= ';', encoding= 'latin1' )
dados04g = pd.read_csv('dados04g.csv', sep= ';', encoding= 'latin1' )
dados02g = pd.read_csv('dados02g.csv', sep= ';', encoding= 'latin1' )
dados00g = pd.read_csv('dados00g.csv', sep= ';', encoding= 'latin1' )
dados98g = pd.read_csv('dados98g.csv', sep= ';', encoding= 'latin1' )
dados96g = pd.read_csv('dados96g.csv', sep= ';', encoding= 'latin1' )
dados94g = pd.read_csv('dados94g.csv', sep= ';', encoding= 'latin1' )

dados24g.insert(4, 'Ano', '2024')
dados22g.insert(4, 'Ano', '2022')
dados20g.insert(4, 'Ano', '2020')
dados18g.insert(4, 'Ano', '2018')
dados16g.insert(4, 'Ano', '2016')
dados14g.insert(4, 'Ano', '2014')
dados12g.insert(4, 'Ano', '2012')
dados10g.insert(4, 'Ano', '2010')
dados08g.insert(4, 'Ano', '2008')
dados06g.insert(4, 'Ano', '2006')
dados04g.insert(4, 'Ano', '2004')
dados02g.insert(4, 'Ano', '2002')
dados00g.insert(4, 'Ano', '2000')
dados98g.insert(4, 'Ano', '1998')
dados96g.insert(4, 'Ano', '1996')
dados94g.insert(4, 'Ano', '1994')

dadosg = pd.concat([dados24g, dados22g, dados20g, dados18g, dados16g, dados14g, dados12g, dados10g, dados08g, dados06g, dados04g, dados02g, dados00g, dados98g, dados96g, dados94g], ignore_index=True)

dadosg = dadosg.drop(columns=['Data de carga'])

dadosg['Gênero'] = dadosg['Gênero'].replace('Não divulgável', 'Não informado')

radio_genero = widgets.RadioButtons(options=['Feminino', 'Masculino', 'Não informado'], description='Escolha:', disabled=False)
dropdown_ano = widgets.Dropdown(options=["2024", "2022", "2020", "2018", "2016", "2014", "2012", "2010", "2008", "2006", "2004", "2002", "2000", "1998", "1996", "1992", "Todos"], description="Ano:")

output = widgets.Output()

def busca_func(change):
    with output:
        clear_output()
        ano = dropdown_ano.value
        genero_valor = radio_genero.value
        if ano != "Todos":
            resultado = dadosg[(dadosg['Gênero'] == genero_valor) & (dadosg['Ano'] == ano)]
            if not resultado.empty:
                display(resultado)
            else:
                print(f"Nenhum dado encontrado.")
        else:
            resultado = dadosg[dadosg['Gênero'] == genero_valor]
            if not resultado.empty:
                display(resultado)
            else:
                print(f"Nenhum dado encontrado.")


radio_genero.observe(busca_func, names='value')
dropdown_ano.observe(busca_func, names='value')

display(radio_genero, dropdown_ano)
display(output)

dados24coreraca = pd.read_csv('coreraca24.csv', sep= ';', encoding= 'latin1' )
dados22coreraca = pd.read_csv('coreraca22.csv', sep= ';', encoding= 'latin1' )
dados20coreraca = pd.read_csv('coreraca20.csv', sep= ';', encoding= 'latin1' )
dados18coreraca = pd.read_csv('coreraca18.csv', sep= ';', encoding= 'latin1' )
dados16coreraca = pd.read_csv('coreraca16.csv', sep= ';', encoding= 'latin1' )
dados14coreraca = pd.read_csv('coreraca14.csv', sep= ';', encoding= 'latin1' )

dados24coreraca.insert(4, 'Ano', '2024')
dados22coreraca.insert(4, 'Ano', '2022')
dados20coreraca.insert(4, 'Ano', '2020')
dados18coreraca.insert(4, 'Ano', '2018')
dados16coreraca.insert(4, 'Ano', '2016')
dados14coreraca.insert(4, 'Ano', '2014')

dadoscoreraca = pd.concat([dados24coreraca, dados22coreraca, dados20coreraca, dados18coreraca, dados16coreraca, dados14coreraca], ignore_index=True)

dadoscoreraca = dadoscoreraca.drop(columns=['Data de carga'])

dropdown_ano = widgets.Dropdown(options=["2024", "2022", "2020", "2018", "2016", "2014", "Todos"], description="Ano:")
dropdown_coreraca = widgets.Dropdown(options=["Amarela", "Branca", "Indígena", "Não Informado", "Não divulgável", "Parda", "Preta", "Todos"], description="Ano:")
output = widgets.Output()

def busca_func(change):
    with output:
        clear_output()
        ano = dropdown_ano.value
        coreraca_valor = dropdown_coreraca.value
        if ano != "Todos" and coreraca_valor != "Todos":
            resultado = dadoscoreraca[(dadoscoreraca['Cor/raça'] == coreraca_valor) & (dadoscoreraca['Ano'] == ano)]
            if not resultado.empty:
                display(resultado)
            else:
                print(f"Nenhum dado encontrado.")
        elif ano == "Todos" and coreraca_valor != "Todos":
            resultado = dadoscoreraca[dadoscoreraca['Cor/raça'] == coreraca_valor]
            if not resultado.empty:
                display(resultado)
            else:
                print(f"Nenhum dado encontrado.")
        elif ano == "Todos" and coreraca_valor == "Todos":
            resultado = dadoscoreraca
            if not resultado.empty:
                display(resultado)
            else:
                print(f"Nenhum dado encontrado.")
        elif ano != "Todos" and coreraca_valor == "Todos":
            resultado = dadoscoreraca[dadoscoreraca['Ano'] == ano]
            if not resultado.empty:
                display(resultado)
            else:
                print(f"Nenhum dado encontrado.")


dropdown_coreraca.observe(busca_func, names='value')
dropdown_ano.observe(busca_func, names='value')

display(dropdown_coreraca, dropdown_ano)
display(output)

dados24c = pd.read_csv('cargo24.csv', sep= ';', encoding= 'latin1' )
dados22c = pd.read_csv('cargo22.csv', sep= ';', encoding= 'latin1' )
dados20c = pd.read_csv('cargo20.csv', sep= ';', encoding= 'latin1' )
dados18c = pd.read_csv('cargo18.csv', sep= ';', encoding= 'latin1' )
dados16c = pd.read_csv('cargo16.csv', sep= ';', encoding= 'latin1' )
dados14c = pd.read_csv('cargo14.csv', sep= ';', encoding= 'latin1' )
dados12c = pd.read_csv('cargo12.csv', sep= ';', encoding= 'latin1' )
dados10c = pd.read_csv('cargo10.csv', sep= ';', encoding= 'latin1' )
dados08c = pd.read_csv('cargo08.csv', sep= ';', encoding= 'latin1' )
dados06c = pd.read_csv('cargo06.csv', sep= ';', encoding= 'latin1' )
dados04c = pd.read_csv('cargo04.csv', sep= ';', encoding= 'latin1' )
dados02c = pd.read_csv('cargo02.csv', sep= ';', encoding= 'latin1' )
dados00c = pd.read_csv('cargo00.csv', sep= ';', encoding= 'latin1' )
dados98c = pd.read_csv('cargo98.csv', sep= ';', encoding= 'latin1' )

dados24c.insert(4, 'Ano', '2024')
dados22c.insert(4, 'Ano', '2022')
dados20c.insert(4, 'Ano', '2020')
dados18c.insert(4, 'Ano', '2018')
dados16c.insert(4, 'Ano', '2016')
dados14c.insert(4, 'Ano', '2014')
dados12c.insert(4, 'Ano', '2012')
dados10c.insert(4, 'Ano', '2010')
dados08c.insert(4, 'Ano', '2008')
dados06c.insert(4, 'Ano', '2006')
dados04c.insert(4, 'Ano', '2004')
dados02c.insert(4, 'Ano', '2002')
dados00c.insert(4, 'Ano', '2000')
dados98c.insert(4, 'Ano', '1998')

dadosc = pd.concat([dados24c, dados22c, dados20c, dados18c, dados16c, dados14c, dados12c, dados10c, dados08c, dados06c, dados04c, dados02c, dados00c, dados98c], ignore_index=True)

dadosc = dadosc.drop(columns=['Data de carga'])

busca_ocupacao = widgets.Text(value='', placeholder='Digite o nome da ocupação', description='Ocupação:', disabled=False)
dropdown_ano = widgets.Dropdown(options=["2024", "2022", "2020", "2018", "2016", "2014", "2012", "2010", "2008", "2006", "2004", "2002", "2000", "1998", "Todos"], description="Ano:")

output = widgets.Output()

def busca_func(change):
    with output:
        clear_output()
        ano = dropdown_ano.value
        termo = busca_ocupacao.value
        if termo and ano != "Todos":
            resultado = dadosc[(dadosc['Ocupação'].str.contains(termo, case=False, na=False)) & (dadosc['Ano'] == ano)]
            if not resultado.empty:
                display(resultado)
            else:
                print(f"Nenhum candidato encontrado.")
        elif termo and ano == "Todos":
            resultado = dadosc[dadosc['Ocupação'].str.contains(termo, case=False, na=False)]
            if not resultado.empty:
                display(resultado)
            else:
                print(f"Nenhum candidato encontrado.")


busca_ocupacao.observe(busca_func, names='value')
dropdown_ano.observe(busca_func, names='value')

display(busca_ocupacao, dropdown_ano)
display(output)